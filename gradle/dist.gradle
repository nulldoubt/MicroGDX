configure(subprojects - project(":backends:micro-backend-android")) {
    tasks.register('uberJar', Jar) {
        archiveClassifier = ''
        archiveVersion = ''
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE

        from(sourceSets.main.output)

        dependsOn(configurations.compileClasspath)

        from() {
            configurations.compileClasspath.findAll() {
                it.name.endsWith('jar') &&
                        !it.name.endsWith("micro-natives.jar") &&
                        !it.name.endsWith("micro-box2d-natives.jar") &&
                        !it.name.endsWith("micro-freetype-natives.jar") &&
                        !it.name.endsWith("micro-bullet-natives.jar") &&
                        !it.name.endsWith("jinput-2.0.5.jar") &&
                        !it.name.endsWith("jutils-1.0.0.jar") &&
                        !it.name.contains("platform")
            }.collect() {
                zipTree(it)
            }
        }
    }

    tasks.register("printCompileClasspath") {
        doFirst() {
            sourceSets.main.compileClasspath.each { println it }
        }
    }
}